{"version":3,"sources":["FriendList/FriendList.module.css","Profile/Profile.js","Statistics/Statistics.js","FriendList/FriendListItem.js","FriendList/FriendList.js","Transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","friend_list","friend_item","isOnline","isOffline","friend_name","Profile","_ref","avatar","name","stats","location","tag","react_default","a","createElement","className","src","alt","followers","views","likes","Statistics","title","map","stat","key","id","style","backgroundColor","concat","Math","random","label","percentage","FriendListItem","_ref$friend","friend","styles","friend_avatar","width","friend_nam","FriendList","friends","FriendList_FriendListItem","TransactionsHistory","items","item","type","amount","currency","App","Fragment","src_Profile_Profile","user","src_Statistics_Statistics","statisticalData","src_FriendList_FriendList","TransactionHistory","transactions","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.63a3bb05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__2tfjg\",\"friend_item\":\"FriendList_friend_item__1-lWt\",\"isOnline\":\"FriendList_isOnline__kh2HG\",\"isOffline\":\"FriendList_isOffline__BmEUu\",\"friend_name\":\"FriendList_friend_name__m8Osv\"};","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './Profile.css';\r\n\r\nconst Profile = ({ avatar, name, stats, location, tag }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className=\"profile_avatar\"\r\n        />\r\n        <p className=\"profile_name\">{name}</p>\r\n        <p className=\"profile_tag\">@{tag}</p>\r\n        <p className=\" profile_location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"profile_stats\">\r\n        <li className=\"profile_stats_item followers\">\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li className=\"profile_stats_item\">\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li className=\"profile_stats_item\">\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './Statistics.css';\r\n\r\nconst getBgColor = () =>\r\n  `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`;\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className=\"statis_section\">\r\n    <h2 className=\"statis_title\">{title}</h2>\r\n    <ul className=\"statis_list\">\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className=\"statis_wrapper\"\r\n          style={{\r\n            backgroundColor: getBgColor(),\r\n          }}\r\n        >\r\n          <span className=\"statis_label\">{stat.label}</span>\r\n          <span className=\"statis_percent\">{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ friend: { isOnline, avatar, name } }) => (\r\n  <li className={styles.friend_item}>\r\n    <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\r\n    <img className={styles.friend_avatar} src={avatar} alt=\"\" width=\"48\" />\r\n    <p className={styles.friend_nam}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport React from 'react';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend_list\">\r\n    {friends.map(friend => (\r\n      <FriendListItem key={friend.id} friend={friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './Transactions.css';\r\n\r\nconst TransactionsHistory = ({ items }) => (\r\n  <table className=\"trans_history\">\r\n    <thead className=\"trans_head\">\r\n      <tr>\r\n        <th className=\"trans_header\">Type</th>\r\n        <th className=\"trans_header\">Amount</th>\r\n        <th className=\"trans_header\">Currency</th>\r\n      </tr>\r\n    </thead>\r\n    {items.map(item => (\r\n      <tbody>\r\n        <tr key={item.id} className=\"trans_tbody\">\r\n          <td className=\"trans_item\">{item.type}</td>\r\n          <td className=\"trans_item\">{item.amount}</td>\r\n          <td className=\"trans_item\">{item.currency}</td>\r\n        </tr>\r\n      </tbody>\r\n    ))}\r\n  </table>\r\n);\r\n\r\nTransactionsHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default TransactionsHistory;\r\n","import Profile from './Profile/Profile';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FriendList from './FriendList/FriendList';\r\nimport TransactionsHistory from './Transactions/TransactionHistory';\r\nimport user from './Profile/user.json';\r\nimport statisticalData from './Statistics/statistics-data.json';\r\nimport friends from './FriendList/friends.json';\r\nimport transactions from './Transactions/transactions.json';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\r\n      <FriendList friends={friends} />,\r\n      <TransactionsHistory items={transactions} />;\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}